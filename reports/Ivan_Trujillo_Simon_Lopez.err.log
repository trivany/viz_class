Traceback (most recent call last):
  File "C:\Users\ivant\Desktop\MaestrÃ­a\VisualizaciÃ³n cientifica\sql jupyter\pgsql\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\ivant\Desktop\MaestrÃ­a\VisualizaciÃ³n cientifica\sql jupyter\pgsql\lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\ivant\Desktop\MaestrÃ­a\VisualizaciÃ³n cientifica\sql jupyter\pgsql\lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\ivant\AppData\Local\Programs\Python\Python39\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\ivant\Desktop\MaestrÃ­a\VisualizaciÃ³n cientifica\sql jupyter\pgsql\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\ivant\Desktop\MaestrÃ­a\VisualizaciÃ³n cientifica\sql jupyter\pgsql\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\ivant\Desktop\MaestrÃ­a\VisualizaciÃ³n cientifica\sql jupyter\pgsql\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import r2_score

def forecast_accuracy(predictions_list, actual, title_prefix=""):
    # Asumiendo que 'actual' es una serie o arreglo que contiene los valores reales
    
    results = []
    fig, axes = plt.subplots(nrows=5, ncols=1, figsize=(10, 18))
    metrics = ['MAE', 'MSE', 'MAPE', 'RMSE', 'R2']
    colors = ['blue', 'green', 'red', 'purple', 'orange']
    
    for idx, forecast in enumerate(predictions_list):
        days_predicted = len(forecast)
        str_name = f"{title_prefix} {days_predicted} days"
        
        # Calculo de errores
        mape = np.mean(np.abs(forecast - actual[:days_predicted]) / np.abs(actual[:days_predicted]))  # MAPE
        mae = np.mean(np.abs(forecast - actual[:days_predicted]))  # MAE
        rmse = np.mean((forecast - actual[:days_predicted])**2)**.5  # RMSE
        mse = np.mean((forecast - actual[:days_predicted])**2)  # MSE
        r2 = r2_score(actual[:days_predicted], forecast)  # R2
        
        results.append({
            'Days': days_predicted,
            'MAE': mae,
            'MSE': mse,
            'MAPE': mape,
            'RMSE': rmse,
            'R2': r2
        })
    
    # Crear un DataFrame para los resultados
    df_results = pd.DataFrame(results)
    
    # Graficar cada mÃ©trica
    for i, metric in enumerate(metrics):
        axes[i].plot(df_results['Days'], df_results[metric], label=metric, color=colors[i], marker='o')
        axes[i].set_title(f"{metric} by days predicted")
        axes[i].set_xlabel('Days')
        axes[i].set_ylabel(metric)
        axes[i].legend()
    
    plt.tight_layout()
    plt.show()
    
    return df_results

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[14], line 4[0m
[0;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[0;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m----> 4[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mmetrics[39;00m [38;5;28;01mimport[39;00m r2_score
[0;32m      6[0m [38;5;28;01mdef[39;00m [38;5;21mforecast_accuracy[39m(predictions_list, actual, title_prefix[38;5;241m=[39m[38;5;124m"[39m[38;5;124m"[39m):
[0;32m      7[0m     [38;5;66;03m# Asumiendo que 'actual' es una serie o arreglo que contiene los valores reales[39;00m
[0;32m      9[0m     results [38;5;241m=[39m []

[1;31mModuleNotFoundError[0m: No module named 'sklearn'

